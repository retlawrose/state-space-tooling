// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
namespace app::dumping {
  //
  // The program's configuration
  //
  // Usage:
  //
  //   Configuration = cfg{program};
  //   cfg.verbose_mode = true;
  //   cfg.warning_mode = true;
  //   ...etc...
  //
  class Configuration;
}
#endiv
#divert <hpp>
#import options.Program // module-options-devel >= 0.16.0 or later use cli::options::Program or such
#import options.config.Generic // module-options-devel >= 0.16.0 or later use cli::configuration::Generic or such
#import options.Boolean
#import std.optional
#import std.filesystem.path
class app::dumping::Configuration : public options::config::Generic {
  using ancestor = options::config::Generic;
public:
  using Program = ::options::Program;
  inline explicit Configuration(Program);
  // Recall that a leveldb "database" is nominated a directory.
  // The database directory name is the directory with .../LOCK within it.
  // e.g. /var/hyperledger/fabric/production/ledgersData/stateLeveldb
  std::optional<std::filesystem::path> leveldb_database_location;
  // Emit the records as raw as possible
  // The default is cooked ... meaning be pretty.
  ::options::Boolean raw_mode;
};
#endiv
#divert <ipp>
app::dumping::Configuration::Configuration(Program program)
  : ancestor{program}
{ }
#endiv
