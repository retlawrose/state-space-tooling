// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/state-space-tooling/blob/master/LICENSE for terms.
#divert <fpp>
#import std.pair
namespace sst::generate::key {
  //
  // The <Identifier, Key> pair.
  //
  // Usage:
  //
  //   rly?
  //
  struct Pair;
}
#endiv
#divert <hpp>
#forward sst.generate.key.pair.Formatter
namespace sst::generate::key {
  inline auto format(Pair const &) -> pair::Formatter;
}
#import sst.generate.key.Identifier
#import rabinpoly.Fingerprint
class sst::generate::key::Pair : private std::pair<Identifier, rabinpoly::Fingerprint> {
  using ancestor = std::pair<Identifier, rabinpoly::Fingerprint>;
public:
  Pair() = default;
  using ancestor::pair;
  inline auto identifier() const -> first_type { return first; }
  inline auto fingerprint() const -> second_type { return second; }
};
#endiv
#divert <ipp>
#import sst.generate.key.pair.Formatter
auto sst::generate::key::format(Pair const &p) -> pair::Formatter {
  return pair::Formatter{p};
}
#endiv
